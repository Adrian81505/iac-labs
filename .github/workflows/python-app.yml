name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  install-poetry:
    runs-on: ubuntu-latest
    concurrency:
      group: install-poetry-group
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4

  static-code-analysis:
    runs-on: ubuntu-latest
    concurrency:
      group: static-code-analysis-group
    needs: install-poetry
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Use Cached Poetry dependencies
        uses: actions/cache@v3
        id: cached-poetry-dependencies
        with:
          path: /home/runner/work/<path>/example-app/.venv
          key: ${{ runner.os }}-venv
      # Run linter, formatter, security checks

  unit-tests:
    runs-on: ubuntu-latest
    concurrency:
      group: unit-tests-group
    needs: install-poetry
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Use Cached Poetry dependencies
        uses: actions/cache@v3
        id: cached-poetry-dependencies
        with:
          path: /home/runner/work/<path>/example-app/.venv
          key: ${{ runner.os }}-venv
      # Run unit tests

